{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\scripts\\components/assets\\scripts\\components\\MJStatus.js"],"names":["cc","Class","extends","Component","properties","time","Label","delay","battery","ProgressBar","_updateInterval","_lastUpdateTime","_red","Color","_yellow","_green","onLoad","update","dt","Date","now","string","th","sio","node","color","hour","getHours","min","getMinutes","progress","anysdkManager","getBatteryPercent"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACTC,cAAKL,GAAGM,KADC;AAETC,eAAMP,GAAGM,KAFA;AAGTE,iBAAQR,GAAGS,WAHF;AAITC,yBAAgB,IAJP;AAKTC,yBAAgB,CALP;AAMTC,cAAM,IAAIZ,GAAGa,KAAP,CAAa,GAAb,EAAiB,CAAjB,EAAmB,CAAnB,CANG;AAOTC,iBAAS,IAAId,GAAGa,KAAP,CAAa,GAAb,EAAiB,GAAjB,EAAqB,CAArB,CAPA;AAQTE,gBAAQ,IAAIf,GAAGa,KAAP,CAAa,CAAb,EAAe,GAAf,EAAmB,CAAnB;AARC,KAHP;;AAcLG,UAdK,oBAcK,CACT,CAfI;AAoBLC,UApBK,kBAoBGC,EApBH,EAoBO;AACR,YAAGC,KAAKC,GAAL,KAAW,KAAKT,eAAhB,GAAgC,KAAKD,eAAxC,EAAwD;AACpD,iBAAKH,KAAL,CAAWc,MAAX,GAAkBC,GAAGC,GAAH,CAAOhB,KAAP,GAAa,IAA/B;AACA,iBAAKI,eAAL,GAAqBQ,KAAKC,GAAL,EAArB;AACA,gBAAGE,GAAGC,GAAH,CAAOhB,KAAP,GAAe,GAAlB,EAAsB;AAClB,qBAAKA,KAAL,CAAWiB,IAAX,CAAgBC,KAAhB,GAAwB,KAAKb,IAA7B;AACH,aAFD,MAEM,IAAGU,GAAGC,GAAH,CAAOhB,KAAP,GAAe,GAAlB,EAAsB;AACxB,qBAAKA,KAAL,CAAWiB,IAAX,CAAgBC,KAAhB,GAAwB,KAAKX,OAA7B;AACH,aAFK,MAED;AACD,qBAAKP,KAAL,CAAWiB,IAAX,CAAgBC,KAAhB,GAAwB,KAAKV,MAA7B;AACH;AACD,gBAAIK,MAAI,IAAID,IAAJ,EAAR;AACA,gBAAIO,OAAKN,IAAIO,QAAJ,EAAT;AACA,gBAAIC,MAAIR,IAAIS,UAAJ,EAAR;AACAH,mBAAKA,OAAK,EAAL,GAAS,MAAIA,IAAb,GAAmBA,IAAxB;AACAE,kBAAIA,MAAI,EAAJ,GAAQ,MAAIA,GAAZ,GAAiBA,GAArB;AACA,iBAAKvB,IAAL,CAAUgB,MAAV,GAAiBK,OAAK,GAAL,GAASE,GAA1B;AACA,iBAAKpB,OAAL,CAAasB,QAAb,GAAsBR,GAAGS,aAAH,CAAiBC,iBAAjB,EAAtB;AACH;AACJ;AAvCI,CAAT","file":"MJStatus.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\components","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n       time:cc.Label,\r\n       delay:cc.Label,\r\n       battery:cc.ProgressBar,\r\n       _updateInterval:1000,\r\n       _lastUpdateTime:0,\r\n       _red: new cc.Color(205,0,0),\r\n       _yellow: new cc.Color(255,200,0),\r\n       _green: new cc.Color(0,205,0)\r\n    },\r\n\r\n    onLoad () {\r\n    },\r\n\r\n    \r\n\r\n\r\n    update (dt) {\r\n        if(Date.now()-this._lastUpdateTime>this._updateInterval){\r\n            this.delay.string=th.sio.delay+\"ms\";\r\n            this._lastUpdateTime=Date.now();\r\n            if(th.sio.delay > 800){\r\n                this.delay.node.color = this._red;\r\n            }else if(th.sio.delay > 300){\r\n                this.delay.node.color = this._yellow;\r\n            }else{\r\n                this.delay.node.color = this._green;\r\n            }\r\n            var now=new Date();\r\n            var hour=now.getHours();\r\n            var min=now.getMinutes();\r\n            hour=hour<10?('0'+hour):hour;\r\n            min=min<10?('0'+min):min;\r\n            this.time.string=hour+\":\"+min;\r\n            this.battery.progress=th.anysdkManager.getBatteryPercent();\r\n        }\r\n    },\r\n\r\n\r\n  \r\n\r\n});\r\n"]}